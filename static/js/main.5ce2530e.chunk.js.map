{"version":3,"sources":["components/Header.tsx","components/InputField.tsx","components/DiffButton.tsx","components/Container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","InputField","tag","getText","value","placeholder","onChange","event","target","DiffButton","showDiff","onClick","Container","useState","flip","setFlip","oldText","setOldText","newText","setNewText","diff","setDiff","text","textX","split","textY","map","item","index","x","y","XY","i","length","n","push","Math","max","getDiff","itemTemplate","prev","parse","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ce2530e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header: React.FC = () => {\r\n  return <div className=\"navbar\">DIFF TOOL</div>;\r\n};\r\n","import React from 'react';\r\n\r\ntype InputFieldProps = {\r\n  tag: string,\r\n  getText(tag:string, text:string):void,\r\n  value: string,\r\n};\r\n\r\nexport const InputField: React.FC<InputFieldProps> = ({ tag, getText, value }) => {\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    getText(tag, event.target.value);\r\n  };\r\n  return (\r\n    <input\r\n      placeholder={\"Place here \" + tag + \" text!\"}\r\n      onChange={changeHandler}\r\n      value={value}\r\n    ></input>\r\n  );\r\n};\r\n","import React from 'react';\r\n type DiffButtonProps = {\r\n     showDiff (): void, \r\n }\r\n\r\nexport const DiffButton: React.FC<DiffButtonProps> = ({showDiff}) => {\r\n    return (\r\n        <div className=\"button\" onClick={showDiff}>Show diff</div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { InputField } from './InputField';\r\nimport { DiffButton } from './DiffButton';\r\nimport parse from 'html-react-parser';\r\n\r\nexport const Container: React.FC = () => {\r\n  const [flip, setFlip] = useState<string>('');\r\n  const [oldText, setOldText] = useState<string>('');\r\n  const [newText, setNewText] = useState<string>('');\r\n  const [diff, setDiff] = useState<string>('');\r\n\r\n  const showDiff = (): void => {\r\n    setFlip('flip');\r\n    const textX = oldText.split('.');\r\n    const textY = newText.split('.');\r\n    textX.map((item, index)=>{\r\n        \r\n        const x: any = ('0 ' + item).split(' ');\r\n        const y: any = ('0 ' + textY[index]).split(' ');\r\n        const XY: any = {};\r\n        for (let i = 0; i < x.length; i++) {\r\n          XY[i] = [0];\r\n          for (let n = 1; n < y.length; n++) {\r\n            if (i === 0) {\r\n              XY[i].push(0);\r\n            } else {\r\n              if (x[i] === y[n]) {\r\n                XY[i].push(XY[i - 1][n - 1] + 1);\r\n              } else {\r\n                XY[i].push(Math.max(XY[i][n - 1], XY[i - 1][n]));\r\n              }\r\n            }\r\n          }\r\n        }\r\n    \r\n        const getDiff = (\r\n          XY: any,\r\n          x: string,\r\n          y: string,\r\n          i: number,\r\n          n: number,\r\n          itemTemplate: string\r\n        ): void => {\r\n          if (n >= 1 && i >= 1 && x[i] === y[n]) {\r\n            itemTemplate = ' '+ x[i] + itemTemplate;\r\n            i -= 1;\r\n            n -= 1;\r\n            getDiff(XY, x, y, i, n, itemTemplate);\r\n          } else {\r\n            if (n > 1 && (i === 1 || XY[i][n - 1] >= XY[i - 1][n])) {\r\n              itemTemplate = ' <span id=\"green\">++' + y[n] + '</span>' + itemTemplate;\r\n              n -= 1;\r\n              getDiff(XY, x, y, i, n, itemTemplate);\r\n            } else {\r\n              if (i > 1 && (n === 1 || XY[i][n - 1] < XY[i - 1][n])) {\r\n                itemTemplate = ' <span id=\"red\">--' + x[i] + '</span>' + itemTemplate;\r\n                i -= 1;\r\n                getDiff(XY, x, y, i, n, itemTemplate);\r\n              } else {\r\n               setDiff(prev => prev + '<div>' + itemTemplate);\r\n              }\r\n            }\r\n          }\r\n        };\r\n        let i = x.length - 1;\r\n        let n = y.length - 1;\r\n        let itemTemplate = '</div>';\r\n        \r\n        getDiff(XY, x, y, i, n, itemTemplate);\r\n      \r\n    })\r\n};\r\n\r\n  const getText = (tag: string, text: string) => {\r\n    if (tag === 'old') {\r\n      setOldText(text);\r\n    } else {\r\n      setNewText(text);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"block1\">\r\n        <InputField tag=\"old\" getText={getText} value={oldText} />\r\n      </div>\r\n      <div className=\"block2\">\r\n        <div className={'flip-container ' + flip}>\r\n          <div className=\"flipper\">\r\n            <div className=\"front\">\r\n              <DiffButton showDiff={showDiff} />\r\n            </div>\r\n            <div className=\"back\">\r\n              <div className=\"result\">{parse(diff)}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"block1\">\r\n        <InputField tag=\"new\" getText={getText} value={newText} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Header } from './components/Header';\r\nimport { Container } from './components/Container';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}